
Skipping the condescending, useless global view, here's the funtoo
way of merging the main portage tree.

A good grasp of the merge process is essential to working with the portage
tree, and avoids relying on dogma and cargo-cult concepts. Some of the rules
outlined can be broken or bent if you know what you're doing. Breaking those
without knowing what you're doing will only make you look bad. Hint: if somebody
is writing a script to check that you didn't screw up, please get your stuff
together and start testing your changes. 

These rules should be followed when submitting overlays to be included
in the main portage tree, out of my experience:

1. test your ebuilds, preferably on more than one system
2. don't forget to create a manifest
3. please do write a clear commit message. Stop using -m and
write a few sentences. If Linus can do it, you can do it:
https://github.com/torvalds/subsurface-for-dirk/blob/a48494d2fbed58c751e9b7e8fbff88582f9b2d02/README#L88
4. if unsure, copy over all the ebuilds for a certain package to the 
<category-name>/package-name folder including all the patches. 
5. if your overlay is sourced, your changes will be merged into the
staging tree. A cron job merges the changes into the production
git tree every 12 hours. Check the git.funtoo.org/funtoo-staging
script to see which commit was merged into the staging tree. 
6. if you want your bus count to be greater than 1, start talking to people.
An unmaintained overlay will be dropped from the portage tree, and good ebuilds
will be merged into something another overlay which is maintained. This also
relates to rule number #3.
7. have patience. If you're not willing to wait for your overlay to be included,
you're not ready to maintain something that might be used for a long time. Inertia
starts to be a good thing once you get enough speed, and a well maintained overlay
will gain momentum. 

One note: All line numbers refer to the snapshoted files included with
the documents. Their respective copyright stays with the original authors
which can be checked here http://git.funtoo.org/funtoo-overlay

If you're interested in checking out what merge script is currently used,
check out http://git.funtoo.org/funtoo-overlay/tree/funtoo/scripts/

A bit of history:

The portage tree usually residing in the /usr/portage folder
(set to that value in /etc/portage/repos.conf/gentoo) was
originally distributed through rsync. This is important because
in those days the manifest files distributed with the ebuilds
checksumed the ebuilds themself: if you encounter an ebuild
that checksums the content of the files folder in addition to
the tarballs present in /usr/portage/distfiles, you're reading
the "fat" manifests required because rsync inherently isn't a 
safe protocol. With git and its system of cryptographic hashes
the need for checksuming the portage tree itself is redundant.
Therefore, both Gentoo and Funtoo use thin-manifests. 

Funtoo first switched to distributing the portage tree through
git: if you think that a slimer git-tree-to-git-tree merge script
can be written, keep in mind that it originally was meant to work
with a different protocol. You can see what protocol
is active by looking at the gentoo-staging merge script snapshoted
from http://git.funtoo.org/funtoo-overlay/tree/funtoo/scripts and provided
together with this document as merge-gentoo-staging.py. You should
open the merge-gentoo-staging.py file and look at lines 21-30 to
see what options are/were available for generating the "seed" gentoo-staging
tree which is then broken up to form the shards and the ebuilds that flow
directly into the funtoo production tree.

The funtoo production tree is read-only: any changes you want implemented cannot
be done by creating a pull request on the funtoo production tree, since the tree
is generated by a series of scripts. 
This might seem like a disadvantage at first, since it creates a more complicated
workflow: however, in the long-term, it's easier to work with the funtoo workflow.

When you create pull requests on a production portage tree, you will experience (on
a slow internet connection) that you have to continuously pull changes, since other
people are commiting directly into production as well. 

Funtoo doesn't suffer from this problem because changes are made in overlays and 
merged into the production tree via scripts. The amount of data you need to sync is
much lower since you don't have to pull changes to the entire portage tree, but only
to the overlay you're commiting to. 

Pull requests to the funtoo-overlay repository can be merged: however, the changes might
be moved to a more appropriate overlay: familiarizing yourself with the structure of
the portage tree will help you immensely.

To help you identify where a certain package comes from, a XML file is generated which
lists exactly which repository the ebuild is sourced from. If you cannot find the ebuild,
it got into the funtoo portage tree directly from Gentoo. The XML file is available at
ports.funtoo.org/packages.xml . The xmlfile is generated in the merge-funtoo-staging.py 
script. 
